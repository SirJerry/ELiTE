#include <Chrono.h>
#include <LightChrono.h>

#include<LiquidCrystal.h>

LiquidCrystal lcd(12, 11, 5, 4, 3, 2); //Interface pins of the LCD 
const int trig_pin=7;
const int echo_pin=6;
long distance,duration;

const int startDistance = 141;
const int endDistance = 36;
float carspeed;

 

float timespent[2];

Chrono chrono(Chrono::SECONDS); 

void setup() {
lcd.begin(16,2);
lcd.setCursor(0,0); //set the cursor to column 0 and line 0
pinMode(7,OUTPUT);
pinMode(6,INPUT);
Serial.begin(9600);
}


void loop() {
digitalWrite(7,LOW);
delayMicroseconds(2);
digitalWrite(7,HIGH);
delayMicroseconds(10);
digitalWrite(7,LOW);
duration = pulseIn(echo_pin, HIGH); //To receive the reflected signal.
distance= duration*0.034/2;
lcd.setCursor(0,0); //set the cursor to column 0 and line 1
lcd.print(distance);
lcd.print("cm");
if (distance > startDistance){
  delay(500);
  lcd.clear();
  chrono.restart();
}
if (distance < endDistance){
  delay(500);
  lcd.clear();
  
}
if (distance < startDistance && distance > endDistance){
  //chrono.restart();
  timespent[0] = chrono.elapsed();
  lcd.setCursor(0,1);

  lcd.print(chrono.elapsed());
}
if (distance < endDistance){
  timespent[1] = chrono.elapsed();
  lcd.setCursor(0,0);
  lcd.print(timespent[1]);
  lcd.print("s");
  Serial.print(timespent[1]); 

carspeed = (startDistance - endDistance)/timespent[1];
lcd.print(" ");
lcd.print(carspeed);
lcd.print("cm/s");
lcd.setCursor(0,1);
lcd.print(startDistance-endDistance);
lcd.print("cm");
delay(10000);
}
//lcd.clear();

}
